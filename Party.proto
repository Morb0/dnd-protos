syntax = "proto3";

import "_Chat.proto";
import "_Character.proto";
import "_Item.proto";

package DC.Packet;

option java_package = "com.packets.party";
option java_outer_classname = "party";
option java_multiple_files = false;

enum PARTY_INVITE_ANSWER {
	INVITE_ANSWER_NONE = 0;
	INVITE_ANSWER_ACEEPT = 1;
	INVITE_ANSWER_CANCEL = 2;
}

message SC2S_PARTY_INVITE_REQ {
	optional .DC.Packet.SACCOUNT_NICKNAME findNickName = 1;
	optional string findAccountId = 2;
	optional string findCharacterId = 3;
}

message SS2C_PARTY_INVITE_RES {
	optional uint32 result = 1;
}

message SS2C_PARTY_INVITE_NOT {
	optional .DC.Packet.SACCOUNT_NICKNAME InviteeNickName = 1;
	optional string InviteeAccountId = 2;
	optional string InviteeCharacterId = 3;
}

message SC2S_PARTY_INVITE_ANSWER_REQ {
	optional uint32 inviteResult = 1;
	optional string returnAccountId = 2;
}

message SS2C_PARTY_INVITE_ANSWER_RES {
	optional uint32 result = 1;
}

message SS2C_PARTY_INVITE_ANSWER_RESULT_NOT {
	optional .DC.Packet.SACCOUNT_NICKNAME nickName = 1;
	optional uint32 inviteResult = 2;
}

message SC2S_PARTY_EXIT_REQ {
}

message SS2C_PARTY_EXIT_RES {
	optional uint32 result = 1;
}

message SS2C_PARTY_MEMBER_INFO_NOT {
	repeated .DC.Packet.SCHARACTER_PARTY_INFO playPartyUserInfoData = 1;
}

message SC2S_PARTY_READY_REQ {
	optional uint32 isReady = 1;
}

message SS2C_PARTY_READY_RES {
	optional uint32 result = 1;
}

message SS2C_PARTY_EQUIP_ITEM_CHANGE_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	repeated .DC.Packet.SItem oldItems = 3;
	repeated .DC.Packet.SItem newItems = 4;
}

message SS2C_PARTY_REGION_CHANGE_NOT {
	optional uint32 region = 1;
}

message SS2C_PARTY_LOCATION_UPDATE_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	optional uint32 updateLocation = 3;
}

message SS2C_PARTY_CHARACTER_SKIN_LIST_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	repeated string characterSkinIdList = 3;
}

message SS2C_PARTY_CHARACTER_SKIN_CHANGE_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	optional string oldCharacterSkinId = 3;
	optional string newCharacterSkinId = 4;
}

message SS2C_PARTY_ITEM_SKIN_LIST_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	repeated string itemSkinIdList = 3;
}

message SS2C_PARTY_ITEM_SKIN_CHANGE_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	optional string oldItemSkinId = 3;
	optional string newItemSkinId = 4;
}

message SS2C_PARTY_GAME_DIFFICULTY_CHANGE_NOT {
	optional uint32 gameDifficultyTypeIndex = 1;
}

message SC2S_PARTY_MEMBER_KICK_REQ {
	optional string accountId = 1;
	optional string characterId = 2;
}

message SS2C_PARTY_MEMBER_KICK_RES {
	optional uint32 result = 1;
}

message SC2S_PARTY_CHAT_REQ {
	optional .DC.Packet.SCHATDATA chatData = 1;
}

message SS2C_PARTY_CHAT_RES {
	optional uint32 result = 1;
}

message SS2C_PARTY_CHAT_NOT {
	optional .DC.Packet.SCHATDATA chatData = 1;
	optional uint64 time = 2;
}

message SS2C_PARTY_READY_CHANGE_NOT {
	optional string accountId = 1;
	optional string characterId = 2;
	optional uint32 isReady = 3;
}

message SS2C_PARTY_KICKED_OUT_NOT {
}
